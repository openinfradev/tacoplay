---
- name: set facts for prepare role
  set_fact:
    argo_version: "{{ argo_version }}"
    argo_workflow_controller_image_repo: "{{ argo_workflow_controller_image_repo }}"
    argo_workflow_executor_image_repo: "{{ argo_workflow_executor_image_repo }}"
    argo_server_image_repo: "{{ argo_server_image_repo }}"
    argo_mysql_image_repo: "{{ argo_mysql_image_repo }}"
    argo_mysql_version: "{{ argo_mysql_version }}"
    argocd_image_repo: "{{ argocd_image_repo }}"
    argocd_version: "{{ argocd_version }}"
    argocd_dex_image_repo: "{{ argocd_dex_image_repo }}"
    argocd_dex_version: "{{ argocd_dex_version }}"
    argocd_redis_image_repo: "{{ argocd_redis_image_repo }}"
    argocd_redis_version: "{{ argocd_redis_version }}"
    helm_operator_version: "{{ helm_operator_version }}"
    helm_operator_image_repo: "{{ helm_operator_image_repo }}"
  tags: download

- import_tasks: helm-operator.yml
- import_tasks: argo.yml
- import_tasks: argocd.yml
  when: argocd_enabled

- name: check if decapod_flow directory exists
  stat:
    path: "{{ decapod_flow_dest }}"
  register: stat_decapod_flow_dest
  tags: download

- name: git clone decapod-flow
  git:
    repo: "{{ decapod_flow_source }}"
    dest: "{{ decapod_flow_dest }}"
    version: "{{ decapod_flow_version }}"
  when: not stat_decapod_flow_dest.stat.exists
  become: false
  tags: download

- name: copy argo-additional-rbac.yaml to tmp
  copy:
    src: "{{ decapod_flow_dest }}/templates/argo-additional-rbac.yaml"
    dest: "/tmp/.argo-additional-rbac.yaml"
  become: false

- name: install rbac to argo for argo:default serviceaccount
  shell: >-
    {{ bin_dir }}/kubectl apply -f /tmp/.argo-additional-rbac.yaml
  become: false

- import_tasks: v1_tasks.yml
  when: decapod_v1_enabled

- name: delete decapod by-products
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ decapod_flow_source }}"
    - /tmp/.helmrelease-rbac.yaml
