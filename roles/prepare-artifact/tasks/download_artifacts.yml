- name: Render manifest yaml for artifacts
  script: >-
    {{ playbook_dir | dirname }}/scripts/render_manifest.sh
  environment:
    decapod_site_dest: "{{ decapod_site_dest }}"
    inventory_dir: "{{ inventory_dir }}"
    site_name: "{{ decapod_preperation_site_name }}"
    decapod_base_yaml_version: "{{ decapod_base_yaml_version }}"
    taco_apps: "{{ taco_apps }}"
  args:
    creates: "{{ inventory_dir }}/.manifest-render-done"
  when:
    - taco_apps and taco_apps|length > 0

- name: grep tacoplay path
  shell: >-
    echo {{ playbook_dir }} | sed  's/extra-playbooks//g'
  register: tacoplay_dir

- name: create chart folder
  shell: >-
    mkdir {{ tacoplay_dir.stdout }}charts/taco_apps/
  become: no
  ignore_errors: yes

- name: Download helm charts from decapod-manifests
  script: >-
    {{ playbook_dir | dirname }}/scripts/download_helm_charts.py
    {{ inventory_dir }}/{{ item }}-manifest.yaml
    {{ tacoplay_dir.stdout }}charts/taco_apps/
  args:
    creates: "{{ inventory_dir }}/.{{ item }}-chart-download-done"
  when:
    - taco_apps and taco_apps|length > 0
  with_items: "{{ taco_apps }}"

- name: Download container images from decapod-manifests
  script: >-
    {{ playbook_dir | dirname }}/scripts/download_container_images.py
    {{ inventory_dir }}/{{ item }}-manifest.yaml
  args:
    creates: "/tmp/.{{ item }}-image-download-done"
    creates: "{{ inventory_dir }}/.{{ item }}-image-download-done"
  when:
    - taco_apps and taco_apps|length > 0
  with_items: "{{ taco_apps }}"

- name: Download container image for rook
  docker_image:
    name: "{{ item.repo }}"
    tag: "{{ item.tag }}"
    source: pull
  with_items:
    - { repo: "{{ rook_ceph_operator_image_repo }}", tag: "{{ rook_ceph_operator_version }}" }
    - { repo: "{{ rook_ceph_image_repo }}", tag: "{{ rook_ceph_version }}" }
    - { repo: "{{ rook_cephcsi_image_repo }}", tag: "{{ rook_cephcsi_image_tag }}" }
    - { repo: "{{ rook_csi_snapshotter_image_repo }}", tag: "{{ rook_csi_snapshotter_tag }}" }
    - { repo: "{{ rook_csi_attacher_image_repo }}", tag: "{{ rook_csi_attacher_image_tag }}" }
    - { repo: "{{ rook_csi_provisioner_image_repo }}", tag: "{{ rook_csi_provisioner_image_tag }}" }
    - { repo: "{{ rook_csi_resizer_image_repo }}", tag: "{{ rook_csi_resizer_image_tag }}" }
    - { repo: "{{ rook_csi_node_driver_registrar_image_repo }}", tag: "{{ rook_csi_node_driver_registrar_image_tag }}" }
  become: true

- name: Download containers that are used implicitly
  docker_image:
    name: "{{ item.repo }}"
    tag: "{{ item.tag }}"
    source: pull
  with_items:
    - "{{ download_container_images }}"
  become: true

- name: Download container image for argocd
  shell: |
    helm template {{ argocd_chart_source }}/argo-cd-{{ argocd_chart_version }}.tgz -f {{ decapod_bootstrap_dest }}/argocd-install/values-override.yaml > {{ decapod_bootstrap_dest }}/argocd.yaml
    {{ playbook_dir | dirname }}/scripts/download_container_images_from_yaml.py {{ decapod_bootstrap_dest }}/argocd.yaml
