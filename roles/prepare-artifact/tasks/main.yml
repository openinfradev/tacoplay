---
- import_tasks: download_artifacts.yml

- name: ensure jq package installed
  package:
    name: jq
    state: present

# where is docker python package used?
- name: ensure pip packages are installed
  pip:
    name:
      - yq
      - docker
    executable: pip3
    extra_args: --ignore-installed
  become: yes

- name: pull images provided by taco
  docker_image:
    name: "{{ item.repo }}:{{item.tag }}"
    source: pull
  with_items:
    - { repo: "{{ openstackclient_image_repo }}", tag: "{{ openstackclient_image_tag }}" }
    - { repo: "{{ container_registry_image_repo }}", tag: "{{ container_registry_image_tag }}" }
  become: yes

- name: run registry container
  docker_container:
    name: taco-registry
    image: "{{ container_registry_image_repo }}:{{ container_registry_image_tag }}"
    restart_policy: always
    ports:
      - 5000:5000
    volumes:
      - "{{ container_registry_volume_relative_dir }}:/var/lib/registry"

- name: tag images
  script: "{{ playbook_dir | dirname }}/scripts/tag-images.sh"
  args:
    creates: /tmp/.image-tag-done

- name: push tagged images to registry
  script: "{{ playbook_dir | dirname }}/scripts/push-images.sh"
  args:
    creates: /tmp/.image-push-done

- name: replace container image in deploy-helmrelease template for offline environment
  replace:
    path: "{{ item }}"
    replace: "LOCAL_REGISTRY"
    regexp: "k8s.gcr.io"
  with_fileglob:
    - "{{ playbook_dir }}/../roles/decapod/files/decapod_flow/templates/helm-operator/*-wftpl.yaml"
  become: true

- name: archive registry image
  docker_image:
    name: "{{ container_registry_image_repo }}"
    tag: "{{ container_registry_image_tag }}"
    archive_path: "{{ container_registry_volume_relative_dir }}/registry.tar"
    source: local

- name: bundle up tacoplay
  shell: tar cvfz tacoplay.tar.gz tacoplay/
  args:
    chdir: "{{ playbook_dir | dirname | dirname }}"
    creates: /tmp/.bundle-done
